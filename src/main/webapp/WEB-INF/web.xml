<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>j2e-pac4j-cdi-demo</display-name>
    <distributable/>

    <absolute-ordering/>

    <!-- BEGIN JSF specific config (params, servlet config, and error handlers -->
    <context-param>
        <param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.WEBAPP_RESOURCES_DIRECTORY</param-name>
        <param-value>/WEB-INF/resources</param-value>
    </context-param>
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>
    <error-page>
        <exception-type>javax.faces.application.ViewExpiredException</exception-type>
        <location>/</location>
    </error-page>
    <!-- END JSF specific config (params, servlet config, and error handlers -->

    <!-- FOR TESTS : -->
    <!--<filter>
        <filter-name>testFilter</filter-name>
        <filter-class>org.pac4j.demo.j2e.TestFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>testFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>-->

    <filter>
        <filter-name>indexFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>AnonymousClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>indexFilter</filter-name>
        <url-pattern>/</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>mustBeAnonFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>AnonymousClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>mustBeAnon</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mustBeAnonFilter</filter-name>
        <url-pattern>/loginForm.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- callbackFilter is now programmatically built and registered with the servlet context via CDI -->

    <filter>
        <filter-name>JwtParameterFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>ParameterClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>JwtParameterFilter</filter-name>
        <url-pattern>/rest-jwt/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>DirectBasicAuthFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>DirectBasicAuthClient,ParameterClient</param-value>
        </init-param>
        <init-param>
            <param-name>multiProfile</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>DirectBasicAuthFilter</filter-name>
        <url-pattern>/dba/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- OidcFilter is now programmatically built and registered with the servlet context via CDI -->

    <filter>
        <filter-name>ForceLoginFilter</filter-name>
        <filter-class>org.pac4j.demo.j2e.ForceLoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ForceLoginFilter</filter-name>
        <url-pattern>/forceLogin</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>Saml2Filter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>SAML2Client</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Saml2Filter</filter-name>
        <url-pattern>/saml2/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <filter>
        <filter-name>Saml2MetadataFilter</filter-name>
        <filter-class>org.pac4j.demo.j2e.Saml2MetadataFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Saml2MetadataFilter</filter-name>
        <url-pattern>/saml2-metadata</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>FacebookFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>FacebookClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
        <init-param>
            <param-name>matchers</param-name>
            <param-value>excludedPath</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>FacebookFilter</filter-name>
        <url-pattern>/facebook/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>ProtectedFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>ProtectedFilter</filter-name>
        <url-pattern>/protected/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>FacebookAdminFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>FacebookClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>admin,securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>FacebookAdminFilter</filter-name>
        <url-pattern>/facebookadmin/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>facebookCustomFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>FacebookClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>custom,securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>facebookCustomFilter</filter-name>
        <url-pattern>/facebookcustom/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>TwitterFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>TwitterClient,FacebookClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>TwitterFilter</filter-name>
        <url-pattern>/twitter/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>FormFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>FormClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>FormFilter</filter-name>
        <url-pattern>/form/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>IndirectBasicAuthFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>IndirectBasicAuthClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>IndirectBasicAuthFilter</filter-name>
        <url-pattern>/basicauth/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>CasFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
        	<param-name>clients</param-name>
        	<param-value>CasClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CasFilter</filter-name>
        <url-pattern>/cas/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>StravaFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>StravaClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>securityHeaders</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>StravaFilter</filter-name>
        <url-pattern>/strava/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>mustBeAuthFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>clients</param-name>
            <param-value>AnonymousClient</param-value>
        </init-param>
        <init-param>
            <param-name>authorizers</param-name>
            <param-value>mustBeAuth</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mustBeAuthFilter</filter-name>
        <url-pattern>/logout</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- logoutFilter is now programmatically built and registered with the servlet context via CDI -->

    <filter>
        <filter-name>centralLogoutFilter</filter-name>
        <filter-class>org.pac4j.j2e.filter.LogoutFilter</filter-class>
        <init-param>
            <param-name>defaultUrl</param-name>
            <param-value>http://localhost:8080/?defaulturlafterlogoutafteridp</param-value>
        </init-param>
        <init-param>
            <param-name>localLogout</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>centralLogout</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>logoutUrlPattern</param-name>
            <param-value>http://localhost:8080/.*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>centralLogoutFilter</filter-name>
        <url-pattern>/centralLogout</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <welcome-file-list>
        <welcome-file>index.action</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>401</error-code>
        <location>/error401.jsp</location>
    </error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/error403.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error500.jsp</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Exception</exception-type >
        <location>/error500.jsp</location>
    </error-page>
</web-app>
